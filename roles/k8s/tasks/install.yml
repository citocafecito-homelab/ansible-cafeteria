- name: Get K8s Stable version
  when: k8s.version is not defined
  block:
    - name: Get Stable K8s version
      ansible.builtin.uri:
        url: https://dl.k8s.io/release/stable.txt
        method: GET
        return_content: true
      register: k8s_version_info
      changed_when: false

    - name: Set K8s version fact
      ansible.builtin.set_fact:
        k8s_version: "{{ k8s_version_info.content | regex_replace('^v(\\d+\\.\\d+)(?:\\.\\d+)?$', 'v\\1') }}"

- name: Set K8s version fact
  when: k8s.version is defined
  ansible.builtin.set_fact:
    k8s_version: "{{ k8s.version }}"

- name: Ensure dependencies are present
  become: true
  ansible.builtin.package:
    name:
      - ca-certificates
      - curl
      - gpg
      - python3-pip
      - bridge-utils
    state: present

- name: Download public key file for Kubernetes {{ k8s_version }}
  become: true
  ansible.builtin.get_url:
    url: "https://pkgs.k8s.io/core:/stable:/{{ k8s_version }}/deb/Release.key"
    dest: "/etc/apt/keyrings/kubernetes-release.key"
    mode: '0644'

- name: Write GPG Keyring
  become: true
  ansible.builtin.command:
    cmd: "gpg --dearmor -o /usr/share/keyrings/kubernetes-apt-keyring.gpg /etc/apt/keyrings/kubernetes-release.key"
    creates: /usr/share/keyrings/kubernetes-apt-keyring.gpg

- name: Add Kubernetes repository for {{ k8s_version }}
  become: true
  ansible.builtin.apt_repository:
    repo: "deb [signed-by=/usr/share/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/{{ k8s_version }}/deb/ /"
    filename: kubernetes
    state: present

- name: Install Kubernetes core packages
  become: true
  ansible.builtin.package:
    name:
      - kubeadm
      - kubelet
      - containerd
    state: present

- name: Hold Kubernetes packages at current version
  become: true
  ansible.builtin.command:
    cmd: apt-mark hold kubeadm kubelet containerd
  args:
    executable: /bin/bash
  changed_when: false

- name: Install Kubernetes Python client
  become: true
  ansible.builtin.pip:
    name: kubernetes
    state: present
    break_system_packages: true
    executable: pip3

- name: Load br_netfilter module
  community.general.modprobe:
    name: br_netfilter
    state: present

- name: Set sysctl parameters for Kubernetes networking
  register: sysctl_conf
  become: true
  ansible.builtin.copy:
    dest: /etc/sysctl.d/k8s.conf
    content: |
      net.bridge.bridge-nf-call-ip6tables = 1
      net.bridge.bridge-nf-call-iptables = 1
      net.ipv4.ip_forward = 1
    owner: root
    group: root
    mode: '0644'

- name: Apply sysctl settings
  become: true
  ansible.builtin.command:
    cmd: sysctl --system
  changed_when: sysctl_conf.changed
